
--===================================================
-- ETAPA 3: CRIAR A INTELIGENCIA PARA ENCONTRAR UM CAMINHO USANDO A ALEATORIEDADE DE CAMINHOS
--===================================================

ALTER PROC CAMINHO @INICIO VARCHAR(1),@FIM VARCHAR(1) AS BEGIN
DECLARE @I VARCHAR(1)
DECLARE @F VARCHAR(1)
SET @I = @INICIO
SET @F = @FIM
DECLARE @C INT
DECLARE @FIRST INT
DECLARE @ID INT
DECLARE @CONTADOR INT = 0
DECLARE @GERACAO INT = 0

if OBJECT_ID ('A_TEMP_CAMINHO') IS NOT NULL
DROP TABLE A_TEMP_CAMINHO
if OBJECT_ID ('B_CAMINHO') IS NOT NULL
DROP TABLE B_CAMINHO
if OBJECT_ID ('C_IA') IS NOT NULL
DROP TABLE C_IA
if OBJECT_ID ('D_RESULTADO') IS NOT NULL
DROP TABLE D_RESULTADO

WHILE @I != @F
BEGIN
 SET @C = (SELECT COUNT(*) FROM SCORE WHERE NODE = @I)
 SET @FIRST = (SELECT MIN(id_linha) AS 'ID' FROM SCORE WHERE NODE = @I)
 SET @ID = (SELECT FLOOR(RAND() * @C) + @FIRST)
 SET @CONTADOR = @CONTADOR + 1
 
 IF OBJECT_ID ('A_TEMP_CAMINHO') IS NOT NULL
  BEGIN DROP TABLE A_TEMP_CAMINHO END
  
    SELECT @CONTADOR AS 'CONTADOR', 
       @I + VIZINHO AS 'PATH', 
       SCORE, 
       id_linha 
    INTO A_TEMP_CAMINHO 
    FROM SCORE 
    WHERE id_linha = @ID 
   

 IF OBJECT_ID ('B_CAMINHO') IS NULL
  BEGIN 
   SELECT * INTO B_CAMINHO FROM A_TEMP_CAMINHO 
  END
  ELSE BEGIN
   INSERT INTO B_CAMINHO
   SELECT * FROM A_TEMP_CAMINHO
  END
  SET @I = (SELECT RIGHT(PATH,1) FROM A_TEMP_CAMINHO)
  
   IF OBJECT_ID ('C_IA') IS NOT NULL 
   BEGIN DROP TABLE C_IA END
   SELECT @CONTADOR AS 'CONTADOR', STRING_AGG(PATH, ',') AS 'PATH', SUM(SCORE) AS 'SCORE' INTO C_IA
   FROM B_CAMINHO 
 
END

 IF OBJECT_ID ('D_RESULTADO') IS NOT NULL
  BEGIN DROP TABLE D_RESULTADO END
 SELECT TOP 1 @GERACAO AS 'GERACAO', CONTADOR, PATH, SCORE AS SCORE INTO D_RESULTADO FROM C_IA
 WHERE CONTADOR = (SELECT MAX(CONTADOR) AS SCORE FROM C_IA)
END

